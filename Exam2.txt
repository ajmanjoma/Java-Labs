import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;

public class EmployeeSorter {

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of employees: ");
        int numEmployees = scanner.nextInt();
        scanner.nextLine();

        Employee[] employees = new Employee[numEmployees];

        for (int i = 0; i < numEmployees; i++) {
            System.out.println("Enter details of employee " + (i + 1) + ":");
            System.out.print("Name: ");
            String name = scanner.nextLine();
            System.out.print("Salary: ");
            double salary = scanner.nextDouble();
            scanner.nextLine(); // consume the newline character
            System.out.print("Allowance: ");
            double allowance = scanner.nextDouble();
            scanner.nextLine(); // consume the newline character

            Employee employee = new Employee(name, salary, allowance);
            employees[i] = employee;
        }

        Arrays.sort(employees); // sorts employees based on their salary and allowance

        try {
            BufferedWriter writer = new BufferedWriter(new FileWriter("output.txt"));
            for (Employee employee : employees) {
                writer.write(employee.toString());
                writer.newLine();
            }
            writer.close();
        } catch (IOException e) {
            System.out.println("Error writing to file: " + e.getMessage());
        }

        System.out.println("Data written to output.txt.");
    }
}

class Employee implements Comparable<Employee> {

    private String name;
    private double salary;
    private double allowance;

    public Employee(String name, double salary, double allowance) {
        this.name = name;
        this.salary = salary;
        this.allowance = allowance;
    }

    public String getName() {
        return name;
    }

    public double getSalary() {
        return salary;
    }

    public double getAllowance() {
        return allowance;
    }

    @Override
    public int compareTo(Employee other) {
        double totalPay = this.salary + this.allowance;
        double otherTotalPay = other.salary + other.allowance;
        if (totalPay < otherTotalPay) {
            return -1;
        } else if (totalPay > otherTotalPay) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public String toString() {
        return name + " - Salary: $" + salary + " - Allowance: $" + allowance;
    }
}
